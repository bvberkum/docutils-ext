<document source="var/test-rst.24.references.rst">
    <paragraph>
        _example-thing-name-1
    <paragraph>
        <reference name="example-ref-name-1" refuri="http://www.python.org/">
            example-ref-name-1
    <target ids="example-ref-name-1" names="example-ref-name-1" refuri="http://www.python.org/">
    <target ids="example-name-2" names="example-name-2" refuri="http://www.python.org/">
    <target ids="test" names="test" refuri="http://www.python.org/">
    <paragraph>
        Here come targets.
        The '`' appearantly forces the target into a paragraph.
    <paragraph>
        <target ids="example-target-id-1" names="example-target-id-1">
            example-target-id-1
    <paragraph>
        Test 
        <target ids="another-target" names="another\ target">
            another target
        .
    <paragraph>
        This thing is with targets, except the above inline
        targets, these change the following element.
        All these here add an id or name to the below paragraph,
        or lateron to below targets.
    <target refid="example-name-3">
    <paragraph ids="example-name-3" names="example-name-3">
        Text with target example-name-3.
    <paragraph>
        This allows other elements with refid or refname to find them
    <paragraph>
        XXX: not really sure about the status of id and name.
    <paragraph>
        References. 
        <reference anonymous="1" name="example-name-5" refuri="http://www.python.org/">
            example-name-5
         and 
        <reference name="example-name-5" refuri="http://www.python.org/">
            example-name-5
        , or 
        <reference name="example-name-5" refuri="http://www.python.org/">
            example-name-5
        
        is that the position where target with id Python was? Not really.
        The reader/parser and writer transform the references. Here refuri
        is spread to all target chains with as endpoint 
        <reference name="Python" refuri="http://www.python.org/">
            Python
        .
    <paragraph>
        Only the endpoint actually cathces new names/ids,
        it seems any one of refname, refid and refuri is an endpoint.
    <paragraph>
        But what is refname vs refid?
        There is no refname here btw.
    <target anonymous="1" ids="id1" refuri="http://www.python.org/">
    <paragraph>
        <strong>
            More references
        . 
        <reference anonymous="1" name="test" refid="another-target">
            test
        
        And lets test 
        <reference name="normal inline refs" refuri="./ref">
            normal inline refs
        <target ids="normal-inline-refs" names="normal\ inline\ refs" refuri="./ref">
         too and 
        <reference name="anonymous inline refs" refuri="./ref">
            anonymous inline refs
        .
        The latter is not marked anonymous as the first one is, but implicitly is still "anonymous" as it has only name.
        You cant refer to these blank nodes with a reference name.
        Its even more anonymous than the first, which cant be addressed either but still has an refid and a numberd target.
    <target anonymous="1" ids="id2" refid="another-target">
    <paragraph>
        One can share the reference from an inline reference though, and manually set an ID for a
        named references. As read here.
    <target refuri="./ref">
    <target ids="test-1 test-2" names="test-1 test-2" refuri="./ref">
    <target ids="example-name-4" names="example-name-4">
    <substitution_definition names="EXAMPLE">
        <image alt="EXAMPLE" uri="images/biohazard.png">
    <target refid="example-name-5">
    <target refid="my-target">
    <target ids="python my-target example-name-5" names="python my-target example-name-5" refuri="http://www.python.org/">
    <target refid="example-name-4">
    <target refid="example-name-4">
    <target ids="example-name-8 example-name-7 example-name-6" names="example-name-8 example-name-7 example-name-6" refid="example-name-4">
    <target ids="example-name-9" names="example-name-9" refid="example-name-3">
    <target ids="example-name-10" names="example-name-10" refid="another-target">
    <target refid="another-target">
    <target ids="example-name-11 another-target-1" names="example-name-11 another-target-1" refid="another-target">
